using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using MySql.Data.MySqlClient;

namespace Manager
{
    public partial class FormPegawai : Form
    {
        string name;
        int idpegawai;
        public FormPegawai(string name, int idpegawai)
        {
            InitializeComponent();
            this.name = name;
            this.idpegawai = idpegawai;
            label9.Text = name;

            loadDgvInventory();
        }


        MySqlConnection conn = koneksi.getConn();
        private void loadDgvInventory()
        {

            DataTable dt = new DataTable();
            try
            {
                string query = "SELECT id_produk AS 'ID', nama_produk AS 'Nama', harga AS 'Price', stok AS 'Stok', deskripsi AS 'Description' FROM produk WHERE status = 'Active'";
                MySqlDataAdapter dataAdapter = new MySqlDataAdapter(query, conn);
                dataAdapter.Fill(dt);

                dgvInventory.DataSource = dt;
            }
            catch
            {

            };
        }

        private void FilterDGVInventory(string searchQuery)
        {
            string query = "SELECT id_produk AS 'ID', nama_produk AS 'Nama', harga AS 'Price', stok AS 'Stok', deskripsi AS 'Description' FROM produk WHERE status = 'Active'";
            try
                {
                    MySqlCommand cmd = new MySqlCommand(query, conn);
                    cmd.Parameters.AddWithValue("@searchQuery", "%" + searchQuery + "%");

                    MySqlDataAdapter adapter = new MySqlDataAdapter(cmd);
                    DataTable dt = new DataTable();
                    adapter.Fill(dt);

                    dgvInventory.DataSource = dt;

                    dgvInventory.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.Fill;
                }
                catch (Exception ex)
                {
                    MessageBox.Show("Terjadi kesalahan saat mengambil data: " + ex.Message);
                }
            
        }


        private void button27_Click(object sender, EventArgs e)
        {

        }

        private void FormPegawai_Load(object sender, EventArgs e)
        {

        }

        private void button2_Click(object sender, EventArgs e)
        {
            koneksi.closeConn();
            cashier cashier = new cashier(name, idpegawai);
            cashier.ShowDialog();
        }

        private void button3_Click(object sender, EventArgs e)
        {
            tabControl1.SelectedTab = tabPage3;
        }

        private void button22_Click(object sender, EventArgs e)
        {
            loadTransactionLog();
            tabControl1.SelectedTab = tabPage5;
        }

        private void textBox2_TextChanged(object sender, EventArgs e)
        {
            string search = textBox2.Text.Trim();
            FilterDGVInventory(search);
        }

        private void button1_Click(object sender, EventArgs e)
        {

            loadDGVJenis();
            tabControl1.SelectedTab = MemberPage;
        }

        //================================================= Add Member =================================================
        private void loadDGVJenis()
        {
            string query = "SELECT id AS 'ID', nama_member AS 'Nama', description AS 'Deskripsi', biaya_registrasi AS 'Biaya', status FROM jenis_member WHERE status = 'Active'";

            MySqlDataAdapter adapter = new MySqlDataAdapter(query, conn);
            DataTable dt = new DataTable();
            adapter.Fill(dt);
            dgvJenis.DataSource = dt;
        }

        private void loadDGVLIST()
        {
            string query = @"SELECT 
                            nomor_hp AS 'Nomor'
                        FROM
                            member
                        WHERE
                            status = 'Active' AND jenis_member = @id_member; ";

            MySqlCommand cmd = new MySqlCommand(query, conn);
            cmd.Parameters.AddWithValue("@id_member", selectedIDJenis);
            MySqlDataAdapter adapter = new MySqlDataAdapter(cmd);
            DataTable dt = new DataTable();
            adapter.Fill(dt);
            dgvListMember.DataSource = dt;
        }

        private void dgvJenis_CellFormatting(object sender, DataGridViewCellFormattingEventArgs e)
        {

        }
        int selectedIDJenis;
        string namaMember;
        private void dgvJenis_CellDoubleClick(object sender, DataGridViewCellEventArgs e)
        {
            if(e.RowIndex >= 0)
            {
                var selectedRow = dgvJenis.Rows[e.RowIndex];
                tbJenisMember.Text = selectedRow.Cells["Nama"].Value.ToString();
                selectedIDJenis = Convert.ToInt32(selectedRow.Cells["ID"].Value);
                namaMember = selectedRow.Cells["Nama"].Value.ToString();
                loadDGVLIST();
            } 
        }

        private void button6_Click(object sender, EventArgs e)
        {
            koneksi.closeConn();
            this.Close();
        }
                    
        private void button4_Click(object sender, EventArgs e)
        {

            string prefixId = namaMember.Substring(0, 2).ToUpper();

            string tanggalSekarang = DateTime.Now.ToString("yyyyMMdd");

            string getCountQuery = @"
                    SELECT COUNT(*) 
                    FROM member 
                    WHERE id_member LIKE @IdPrefix";
            MySqlCommand countCommand = new MySqlCommand(getCountQuery, conn);
            countCommand.Parameters.AddWithValue("@IdPrefix", $"{prefixId}{tanggalSekarang}%");

            int count = Convert.ToInt32(countCommand.ExecuteScalar());

            // 4. Buat ID member baru
            string newId = $"{prefixId}{tanggalSekarang}{(count + 1).ToString("D2")}";

            // 5. Query untuk menambahkan data member baru
            string insertQuery = @"
                    INSERT INTO member (id_member, nomor_hp, jenis_member, status) 
                    VALUES (@IdMember, @NomorHp, @JenisMember, @Status)";

            MySqlCommand insertCommand = new MySqlCommand(insertQuery, conn);
            insertCommand.Parameters.AddWithValue("@IdMember", newId);
            insertCommand.Parameters.AddWithValue("@NomorHp", textBox5.Text);
            insertCommand.Parameters.AddWithValue("@JenisMember", selectedIDJenis);
            insertCommand.Parameters.AddWithValue("@Status", "active");

            int rowsAffected = insertCommand.ExecuteNonQuery();
            if (rowsAffected > 0)
            {
                loadDGVLIST();
                MessageBox.Show("Member berhasil ditambahkan!");
                Console.WriteLine($"ID Member: {newId}");
            }
            else
            {
                Console.WriteLine("Gagal menambahkan member.");
            }
        }

        private void button8_Click(object sender, EventArgs e)
        {
            tabControl1.SelectedTab = tabPage1;
        }

        private void button7_Click(object sender, EventArgs e)
        {
            tbJenisMember.Text = "";
            textBox5.Text = "";
        }

        //================================ LOG ==========================================

        private void loadTransactionLog()
        {

            string query = @"SELECT 
                CONCAT(pegawai.first_name, '', pegawai.last_name) AS 'Nama Pegawai',
                htrans.tanggal_transaksi AS 'Tanggal Transaksi',
                htrans.subtotal AS 'Subtotal',
                htrans.grandtotal AS 'Grandtotal',
                htrans.pajak AS 'Pajak',
                htrans.metode_pembayaran AS 'Metode Pembayaran'
                FROM
                    htrans
                INNER JOIN
                pegawai ON htrans.id_pegawai = pegawai.id_pegawai";

            try
            {
                MySqlDataAdapter dataAdapter = new MySqlDataAdapter(query, conn);
                DataSet ds = new DataSet();
                DataTable dt = new DataTable();
                dataAdapter.Fill(dt);

                dataGridViewTransaction.DataSource = dt;
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }

        }
        int id;
        private void dgvInventory_CellDoubleClick(object sender, DataGridViewCellEventArgs e)
        {
            if(e.RowIndex >= 0)
            {
                id = Convert.ToInt32(dgvInventory.Rows[e.RowIndex].Cells["ID"].Value);
            }
        }

        private void dateTimePicker1_ValueChanged(object sender, EventArgs e)
        {
            try
            {
                DateTime selectedDate = dateTimePicker1.Value.Date;

                string query = @"
                SELECT 
                    CONCAT(pegawai.first_name, ' ', pegawai.last_name) AS 'Nama Pegawai',
                    htrans.tanggal_transaksi AS 'Tanggal Transaksi',
                    htrans.subtotal AS 'Subtotal',
                    htrans.grandtotal AS 'Grandtotal',
                    htrans.pajak AS 'Pajak',
                    htrans.metode_pembayaran AS 'Metode Pembayaran'
                FROM
                    htrans
                INNER JOIN
                    pegawai ON htrans.id_pegawai = pegawai.id_pegawai
                WHERE
                    CAST(htrans.tanggal_transaksi AS DATE) = @SelectedDate";

                // Buat koneksi dan eksekusi query

                using (MySqlCommand command = new MySqlCommand(query, conn))
                {
                    // Tambahkan parameter untuk tanggal
                    command.Parameters.AddWithValue("@SelectedDate", selectedDate);



                    DataTable dataTable = new DataTable();
                    using (MySqlDataAdapter adapter = new MySqlDataAdapter(command))
                    {
                        adapter.Fill(dataTable);
                    }
                    dataGridViewTransaction.DataSource = dataTable;
                }

            }
            catch (Exception ex)
            {
                MessageBox.Show($"An error occurred: {ex.Message}");
            }
        }

        private void textBox4_TextChanged(object sender, EventArgs e)
        {

        }

        private void button5_Click(object sender, EventArgs e)
        {

        }

        private void btnHarga_Click(object sender, EventArgs e)
        {
            FormHarga harga = new FormHarga(id);
            harga.ShowDialog();
        }

        private void MemberPage_Click(object sender, EventArgs e)
        {

        }
    }
}
